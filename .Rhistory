c(DE, list(pMut = p, pCR = q), MoreArgs = args)
list(DE, list(pMut = p, pCR = q), MoreArgs = args)
do.call(mapply, list(DE, list(pMut = p, pCR = q), MoreArgs = args))
p
args
list(DE, list(pMut = p, pCR = q), MoreArgs = args)
v <- do.call(mapply, list(DE, pMut = p, pCR = q, MoreArgs = args))
devtools::document()
UniPro(30,3)
devtools::document()
UniPro(30,3)
devtools::document()
UniPro(30,3)
devtools::document()
UniPro(30,3)
UniPro(30,3, trace = TRUE)
devtools::document()
UniPro(30,3, trace = TRUE)
devtools::document()
UniPro(30,3, trace = TRUE)
UniPro(30,3, trace = 2)
devtools::document()
UniPro(30,3, trace = 2)
UniPro(30, 3, pMut = 0.3, pCR = 0.2, trace = 2)
UniPro(30, 3, pMut = 0.3, pCR = 0.9, trace = 2)
UniPro(30, 3, pMut = 0.3, pCR = 0.9, trace = 2, replicates = 100)->a
UniPro(30, 3, pMut = 0.3, pCR = 0.9, trace = TRUE, replicates = 100)->b
devtools::document()
UniPro(30, 3, pMut = 0.1, pCR = 0.9, trace = TRUE, replicates = 100)->b
b
UniPro(30, 3, pMut = 0.0, pCR = 0.9, trace = TRUE, replicates = 100)->d
d
UniPro(30, 3, pMut = 0.001, pCR = 0.9, trace = TRUE, replicates = 100)->d
d
UniPro(30, 3, pMut = 0.01, pCR = 0.9, trace = TRUE, replicates = 100)->d
d
UniPro(30, 3, pMut = 0.01, pCR = 0, trace = TRUE, replicates = 100)->d
d
UniPro(30, 3, pMut = 0.02, pCR = 0, trace = TRUE, replicates = 100)->d
d
boxplot(list(a=a$measure, b=b$measure, d=d$measure))
UniPro(30, 3, pMut = 0.2, pCR = 0, trace = TRUE, replicates = 100)->d
boxplot(list(a=a$measure, b=b$measure, d=d$measure))
UniPro(30, 3, pMut = 0.3, pCR = 0, trace = TRUE, replicates = 100)->d
boxplot(list(a=a$measure, b=b$measure, d=d$measure))
UniPro(30, 3, pMut = 0.5, pCR = 0, trace = TRUE, replicates = 100)->d
boxplot(list(a=a$measure, b=b$measure, d=d$measure))
UniPro(30, 3, pMut = 0.9, pCR = 0, trace = TRUE, replicates = 100)->d
boxplot(list(a=a$measure, b=b$measure, d=d$measure))
UniPro(30, 3, pMut = 0.5, pCR = 0, trace = TRUE, replicates = 100)->d
boxplot(list(a=a$measure, b=b$measure, d=d$measure))
install.packages('rsm')
install.packages('texreg')
setwd("C:/Users/samon/OneDrive/Desktop/papers_complete/individual_papers/chapters/DE")
install.packages('SLHD')
SLHD::maximinSLHD
DE
devtools::document()
DE
DE(30, 3, replicates = 100, method = "maximinLHD")->a
SLHD::maximinSLHD(1,30,3)->b
a$timeTaken
replicate(100,SLHD::maximinSLHD(1,30,3))->b
b["time_rec"]
b["time_rec",]
sum(b["time_rec",])
sum(unlist(b["time_rec",]))
b["measure",]
hist(list(SA=unlist(b["measure",]),DE=a$measure))
boxplot(list(SA=unlist(b["measure",]),DE=a$measure))
replicate(100,SLHD::maximinSLHD(1,30,3,nstarts = 10))->b
sum(unlist(b["time_rec",]))
boxplot(list(SA=unlist(b["measure",]),DE=a$measure))
replicate(100,SLHD::maximinSLHD(1,30,3))->d
boxplot(list(SA=unlist(b["measure",]),DE=a$measure, SLHD=unlist(d["measure",])))
replicate(100,SLHD::maximinSLHD(1,30,3,nstarts = 15))->b
boxplot(list(SA=unlist(b["measure",]),DE=a$measure, SLHD=unlist(d["measure",])))
sum(unlist(b["time_rec",]))
?SLHD::maximinSLHD
boxplot(list(SA=unlist(b["measure",]),DE=a$measure))
setwd("C:/Users/samon/OneDrive/Desktop/papers_complete/individual_papers/chapters/DE")
b <- replicate(100,SLHD::maximinSLHD(1,30,3,nstarts = 15))
a <- DE(30, 3, replicates = 100, method = "maximinLHD", trace = 1)
sum(unlist(b["time_rec",]))
a$timeTaken
boxplot(list(SA=unlist(b["measure",]),DE=a$measure))
b <- replicate(100,SLHD::maximinSLHD(1,50,5,nstarts = 15))
a <- DE(50, 5, replicates = 100, method = "maximinLHD", trace = 1)
boxplot(list(SA=unlist(b["measure",]),DE=a$measure))
b50 <- unlist(b["measure",])
a50 <- a$measure
n<-30;m<-3;b <- replicate(100,SLHD::maximinSLHD(1,n,m,nstarts = 15)); a <- DE(n, m, replicates = 100, method = "maximinLHD", trace = 1);a30<-a$measure;b30<-unlist(b["measure",])
n<-70;m<-7;b <- replicate(100,SLHD::maximinSLHD(1,n,m,nstarts = 15)); a <- DE(n, m, replicates = 100, method = "maximinLHD", trace = 3);a70<-a$measure;b70<-unlist(b["measure",])
sum(unlist(b["time_rec",]))
boxplot(list(SA=unlist(b["measure",]),DE=a$measure))
ls(pattern = "^[ab]\\d+")
mget(ls(pattern = "^[ab]\\d+"))
data.frame(mget(ls(pattern = "^[ab]\\d+")))
getwd()
data.frame(mget(ls(pattern = "^[ab]\\d+")))|>write.table("data/maxipro.txt", row.names = FALSE)
dat <- read.table("data/maxipro.txt")
plot_maxi <- function(n){
boxplot(endsWith(names(dat), n))
}
plot_maxi(30)
dat <- read.table("data/maxipro.txt")
plot_maxi <- function(n){
boxplot(endsWith(names(dat), as.character(n)))
}
dat <- read.table("data/maxipro.txt")
plot_maxi(30)
endsWith(names(dat), as.character(n))
n
head(dat)
dat <- read.table("data/maxipro.txt", header = TRUE)
plot_maxi <- function(n){
boxplot(endsWith(names(dat), as.character(n)))
}
endsWith(names(dat), as.character(n))
plot_maxi <- function(n){
boxplot(dat[,endsWith(names(dat), as.character(n))])
}
plot_maxi(30)
a30 <- UniPr:::DE(30, 3, replicates = 100, method = "maximinLHD") # DE
a30 <- UniPro:::DE(30, 3, replicates = 100, method = "maximinLHD") # DE
b30 <- SLHD::maximinLHD(1, 30, 3, nstarts = 15)
a30 <- UniPro:::DE(30, 3, replicates = 100, method = "maximinLHD") # DE
#a30 <- UniPro:::DE(30, 3, replicates = 100, method = "maximinLHD") # DE
b30 <- SLHD::maximinSLHD(1, 30, 3, nstarts = 15)
#a30 <- UniPro:::DE(30, 3, replicates = 100, method = "maximinLHD") # DE
b30 <- replicate(100, SLHD::maximinSLHD(1, 30, 3, nstarts = 15))
sum(unlist(b["time_rec"]))
sum(unlist(b["time_rec",]))
cat("time DE", a$timeTaken, "SA:", sum(unlist(b["time_rec",])))
cat("time DE:", a$timeTaken, "SA:", sum(unlist(b["time_rec",])))
cat("time DE:", a$timeTaken, "SA:", sum(unlist(b["time_rec",])), "\n")
boxplot(list(DE=a$measure, SA=unlist(b["measure",])))
sessioninfo::platform_info()
na.omit(NA)
na.omit(NA)[1]
df <- data.frame(
record_id = c(1, 1, 1, 2, 2, 3, 3, 3),
instance = c(NA, NA, 2, NA, 1, 2, NA, NA),
A = c(10, NA, NA, 20, 25, NA, 30, NA),
B = c(NA, 5, NA, NA, 5, 15, NA, 15),
C = c(NA, NA, 3, NA, 5, 20, NA, 20),
D = c(NA, NA, NA, 25, 25, 30, NA, 30)
)
df
aggregate(.~record + instance, df, \(x)na.omit(x)[1], na.action = na.pass)
aggregate(.~record_id + instance, df, \(x)na.omit(x)[1], na.action = na.pass)
aggregate(.~record_id + instance, df, \(x)na.omit(x)[1], na.action = I)
aggregate(.~record_id + instance, df, \(x)na.omit(x)[1], na.action = identity)
aggregate(.~record_id + factor(instance), df, \(x)na.omit(x)[1], na.action = identity)
aggregate(.~record_id + factor(instance,exclude = F), df, \(x)na.omit(x)[1], na.action = identity)
aggregate(.~record_id + factor(instance,exclude = F), df, \(x)na.omit(x)[1])
aggregate(.~record_id + factor(instance,exclude = F), df, \(x)na.omit(x)[1],na.action = na.pass)
devtools::document()
debug(DE)
DE(30, 3)
args1
devtools::document()
DE(30, 3)
devtools::document()
DE(30, 3)
DE(30, 3, method = 'maximinLHD')
DE(30, 3, method = 'maximinLHD', replicates = 5)
DE(30, 3, method = 'maximinLHD', replicates = 5, trace = 3)
UniPro:::DE(30, 3, method = 'maximinLHD', replicates = 5, trace = 3)
UniPro:::DE(30, 3, method = 'maximinLHD', replicates = 5, trace = 3)->a
a$call
a$call$
read.table("https://www.isi-stats.com/isi/data/prelim/OrganDonor.txt")
read.table("https://www.isi-stats.com/isi/data/prelim/OrganDonor.txt", header = TRUE)|>table()
read.table("https://www.isi-stats.com/isi/data/prelim/OrganDonor.txt", header = TRUE)|>table()|>addmargins()
read.table("https://www.isi-stats.com/isi/data/prelim/OrganDonor.txt", header = TRUE)|>boxplot()
read.table("https://www.isi-stats.com/isi/data/prelim/OrganDonor.txt", header = TRUE)->a
a
barplot(a)
barplot(a$Default)
barplot(table(a$Default))
barplot(table(a$Choice))
names(A)
names(a)
boxplot(Default~Choice, a)
barplot(Default~Choice, a)
?barplot(Default~Choice, a)
a
table(a)
barplot(table(a))
barplot(t(table(a)))
barplot(t(table(a)), width = 2)
barplot(t(table(a)), width = 1)
barplot(t(table(a)), width = 0.1)
barplot(t(table(a)), space = 0)
barplot(t(table(a)), space = 1)
barplot(t(table(a)), space = 2)
barplot(t(table(a)), density = TRUE)
barplot(t(table(a)), col = 2)
barplot(t(table(a)), col = 1:3)
barplot(t(table(a)), col = 1:5)
barplot(t(table(a)), col = 1:@)
barplot(t(table(a)), col = 1:2)
mosaic::count(a)
mosaic::count(~Default,a)
names(a)
mosaic::count(~Default+Choice,a)
mosaic::count(~Default|Choice,a)
mosaic::count(Default~Choice,a)
mosaic::count(Choise~Choice,a)
mosaic::count(Choice~Choice,a)
mosaic::count(Choice~Default,a)
mosaic::tally(Choice~Default,a)
mosaic::tally(~Default,a)
mosaic::tally(~Default,a, type="prop")
mosaic::tally(~Default,a, type="percentage")
?mosaic::tally(~Default,a, type="percentage")
mosaic::tally(~Default,a, format="percentage")
mosaic::tally(~Default,a, format="percent")
mosaic::tally(Choice~Default,a, format="percent")
mosaic::tally(Choice~Default,a, format="percent")|>barplot()
mosaic::tally(Choice~Default,a, format="percent")|>mosaic::bargraph()
mosaic::bargraph(Choice~Default, a)
mosaic::bargraph(~Default, a)
mosaic::bargraph(~Default|Choice, a)
mosaic::bargraph(~Default+Choice, a)
mosaic::bargraph(~Choice*Default, a)
mosaic::bargraph(~Choice:Default, a)
mosaic::bargraph(~Choice|Default, a)
mosaic::bargraph(~Choice|Default, a, type = 'percent')
mosaic::bargraph(~Choice|Default, a, type = 'prop')
mosaic::bargraph(~Choice+Default, a, type = 'prop')
read.table("https://www.isi-stats.com/isi/data/prelim/OldFaithful2.txt", header = T)->b
mosaic::mean()
names(b)
mosaic::mean(TimeBetween~., b)
mosaic::mean(TimeBetween~TimeBetween, b)
library(mosaic)
mosaic::mean(TimeBetween~TimeBetween, b)
names(b)
mosaic::mean(TimeBetween~TimeBetween, b)
mosaic::mean(TimeBetween~TimeBetween, data = b)
mosaic::mean(TimeBetween~EruptionType, data = b)
import pandas as pd
reticulate::repl_python()
?math
?bquote
exprs <- expression(x <- 1, y <- 2, x + y)
bquote(function() {..(exprs)}, splice = TRUE)
?graphics
?plotmath
dat <- read.table("data/maxipro.txt", header = TRUE)
setwd("C:/Users/samon/OneDrive/Desktop/papers_complete/individual_papers/chapters/DE")
dat <- read.table("data/maxipro.txt", header = TRUE)
plot_maxi <- function(n){
boxplot(dat[,endsWith(names(dat), as.character(n),
ylab=latex2exp::TeX("$\\phi_p(D)$"))]|>setNames(c("DE", "SA")))
}
plot_maxi(30)
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\Huge\\phi_p(D)$"), cex.axis=1.5)
dat <- read.table("data/maxipro.txt", header = TRUE)
plot_maxi <- function(n){
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\Huge\\phi_p(D)$"), cex.axis=1.5)
}
plot_maxi(30)
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=1.5)
plot_maxi <- function(n){
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=1.5)
}
plot_maxi(30)
plot_maxi <- function(n){
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=2)
}
plot_maxi(30)
par(mgp = c(2, 0.5, 0))  # Default is c(3, 1, 0)
plot(1:10, ylab = "Y Axis Label")
plot_maxi(30)
par(mgp = c(2, 0.3, 0))  # Default is c(3, 1, 0)
plot(1:10, ylab = "Y Axis Label")
plot_maxi(30)
par(mgp = c(2, 0, 0))  # Default is c(3, 1, 0)
plot(1:10, ylab = "Y Axis Label")
plot_maxi(30)
?par
par()$oma
dat
endsWith(names(dat), as.character(30))
dat[,endsWith(names(dat), as.character(30))]
stack(dat[,endsWith(names(dat), as.character(30))])
library(tidyverse)
dat %>%select(endsWith(30))
dat %>%select(endsWith("30"))
dat %>%select(ends_with("30"))
dat %>%select(ends_with(30))
dat %>%select(ends_with(as.character(30)))
dat %>%select(ends_with(as.character(30))) %>% pivot_longer()
dat %>%select(ends_with(as.character(30))) %>% pivot_longer(everything())
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "..*", c(a = "DE", b="SA")))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "(.).*", c(a = "DE", b="SA")))
str_replace_all("123", "2", c(2="a", 3="b"))
str_replace_all("123", "2", c("2"="a", "3"="b"))
str_replace_all("123", ".", c("2"="a", "3"="b"))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "(.).*", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "(.)", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "^(.)", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "^(.).*", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "^(.)", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "^(.).", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "^(.)", ~c(a = "DE", b="SA")[.x]))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = str_replace_all(name, "^(.)", ~c(a = "DE", b="SA")[.x]|>str_remove("\\d+")))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')])
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot()
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$"))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.text.y.left = T)
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.text.y.left = element_text())
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.text.y.left = element_text(size = 3))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.text.y.left = element_text(size = 30))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.text.y = element_text())
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.text.y = element_text(size=30))
?theme
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.title.y = element_text(size=3))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.title.y = element_text(size=10))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.title.y = element_text(size=15))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.title.y = element_text(size=15))
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.title.y = element_text(size=15),
axis.title.x = NULL)
dat %>%
select(ends_with(as.character(30))) %>%
pivot_longer(everything()) %>%
mutate(name = c(a="DE", b="SA")[str_remove(name, '\\d+')]) %>%
ggplot(aes(name, value)) +
geom_boxplot() +
ylab(latex2exp::TeX("$\\phi_p(D)$")) +
theme(axis.title.y = element_text(size=15),
axis.title.x = element_blank())
?par
par(mgp = c(2, -2, 0))
par(mgp = c(0, -2, 0))
plot_maxi(50)
par(mgp = c(0, 0, 0))
plot_maxi(50)
par(mgp = c(0, 1, 0))
plot_maxi(50)
par(mgp = c(0, 0, 0))
plot_maxi(50)
par(mgp = c(0, 0, 0))
plot_maxi(50)
par(mgp = c(0, 1, 0))
plot_maxi(50)
par(mgp = c(0, 1, 0))
plot_maxi(50)
par(mgp = c(1, 1, 0))
plot_maxi(50)
par(mgp = c(1, 0, 0))
plot_maxi(50)
plot_maxi <- function(n){
par(mgp = c(1, 0, 0))
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=2)
axis(2, labels = TRUE, tck = 0)
}
plot_maxi(30)
plot_maxi <- function(n){
par(mgp = c(1, 0, 0))
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=2)
axis(2, labels = FALSE, tck = 0)
}
plot_maxi(30)
plot(1:10, xaxt = "n", yaxt = "n")  # suppress default x and y axes
axis(1, labels = TRUE, tck = 0)     # x-axis: show labels, no ticks
axis(2, labels = TRUE, tck = 0)     # y-axis: show labels, no ticks
plot_maxi <- function(n){
par(mgp = c(1, 0, 0))
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=2)
axis(2, labels = TRUE, tck = 0)
}
plot_maxi(30)
plot_maxi <- function(n){
par(mgp = c(1, 0, 0))
boxplot(dat[,endsWith(names(dat), as.character(n))]|>setNames(c("DE", "SA"))
,ylab=latex2exp::TeX("$\\phi_p(D)$"), cex.lab=2, yaxt = 'n')
axis(2, labels = TRUE, tck = 0)
}
plot_maxi(30)
